"use strict";(self.webpackChunkdsa_study_guide=self.webpackChunkdsa_study_guide||[]).push([[391],{9833:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>x,frontMatter:()=>h,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"algorithms/binary-search","title":"Binary Search","description":"Understanding binary search algorithm","source":"@site/docs/algorithms/binary-search.mdx","sourceDirName":"algorithms","slug":"/algorithms/binary-search","permalink":"/docs/algorithms/binary-search","draft":false,"unlisted":false,"editUrl":"https://github.com/LuluBeatson/dsa-study-guide/tree/main/docs/algorithms/binary-search.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Binary Search","description":"Understanding binary search algorithm"},"sidebar":"tutorialSidebar","previous":{"title":"Sliding Window (Dynamic)","permalink":"/docs/algorithms/sliding-window-dynamic"},"next":{"title":"Depth-First Search","permalink":"/docs/algorithms/dfs"}}');var a=s(4848),t=s(8453),i=s(5537),l=s(9329);s(8069);const h={sidebar_position:3,title:"Binary Search",description:"Understanding binary search algorithm"},d="Binary Search",c={},m=[{value:"Template",id:"template",level:2},{value:"Example: Find Target Element in a <strong>Rotated</strong> Sorted Array",id:"example-find-target-element-in-a-rotated-sorted-array",level:2}];function o(e){const n={a:"a",annotation:"annotation",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"binary-search",children:"Binary Search"})}),"\n",(0,a.jsxs)(n.p,{children:["The binary search algorithm is used to find a target element in a ",(0,a.jsx)(n.strong,{children:"sorted"})," array by repeatedly dividing the search space in half."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Time Complexity:"})," ",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsxs)(n.mrow,{children:[(0,a.jsx)(n.mi,{children:"O"}),(0,a.jsx)(n.mo,{stretchy:"false",children:"("}),(0,a.jsx)(n.mi,{children:"log"}),(0,a.jsx)(n.mo,{children:"\u2061"}),(0,a.jsx)(n.mi,{children:"n"}),(0,a.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(\\log n)"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(n.span,{className:"mopen",children:"("}),(0,a.jsxs)(n.span,{className:"mop",children:["lo",(0,a.jsx)(n.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,a.jsx)(n.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(n.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Space Complexity:"})," ",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsxs)(n.mrow,{children:[(0,a.jsx)(n.mi,{children:"O"}),(0,a.jsx)(n.mo,{stretchy:"false",children:"("}),(0,a.jsx)(n.mn,{children:"1"}),(0,a.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(1)"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(n.span,{className:"mopen",children:"("}),(0,a.jsx)(n.span,{className:"mord",children:"1"}),(0,a.jsx)(n.span,{className:"mclose",children:")"})]})})]})]}),"\n",(0,a.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Initialization"}),": Set ",(0,a.jsx)(n.code,{children:"left"})," to 0 and ",(0,a.jsx)(n.code,{children:"right"})," to the last index of the array."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Loop Condition"}),": While ",(0,a.jsx)(n.code,{children:"left"})," is less than or equal to ",(0,a.jsx)(n.code,{children:"right"}),":","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Calculate ",(0,a.jsx)(n.code,{children:"mid"})," as the index of the middle element."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Condition"}),":","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["If the middle element equals the target, return the index ",(0,a.jsx)(n.code,{children:"mid"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["If the middle element is less than the target, update ",(0,a.jsx)(n.code,{children:"left"})," to ",(0,a.jsx)(n.code,{children:"mid + 1"})," (search in the right half)."]}),"\n",(0,a.jsxs)(n.li,{children:["If the middle element is greater than the target, update ",(0,a.jsx)(n.code,{children:"right"})," to ",(0,a.jsx)(n.code,{children:"mid - 1"})," (search in the left half)."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Return"}),": If the target is not found, return -1."]}),"\n"]}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"py",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = left + (right - left) // 2\n        # Condition to check the middle element\n        if arr[mid] == target:\n            return mid  # Target found\n        elif arr[mid] < target:\n            left = mid + 1  # Search in the right half\n        else:\n            right = mid - 1  # Search in the left half\n    return -1  # Target not found\n"})})}),(0,a.jsx)(l.A,{value:"ts",label:"Golang",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:"func binarySearch(arr []int, target int) int {\n    left, right := 0, len(arr)-1\n    for left <= right {\n        mid := left + (right-left)/2\n        if arr[mid] == target {\n            return mid\n        } else if arr[mid] < target {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return -1\n}\n"})})})]}),"\n",(0,a.jsxs)(n.h2,{id:"example-find-target-element-in-a-rotated-sorted-array",children:["Example: Find Target Element in a ",(0,a.jsx)(n.strong,{children:"Rotated"})," Sorted Array"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/search-in-rotated-sorted-array/",children:"LeetCode 33"})}),"\n",(0,a.jsxs)(n.p,{children:["To make this a bit more interesting, let's say the sorted array is ",(0,a.jsx)(n.strong,{children:"rotated"}),". Return the index of the target element if found, otherwise return -1."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"arr"})," is a sorted ascending array (distinct values). It has been rotated at some unknown pivot ",(0,a.jsx)(n.code,{children:"k"})," (",(0,a.jsx)(n.code,{children:"0 <= k < n"}),") such that the array is transformed into ",(0,a.jsx)(n.code,{children:"arr[k], arr[k+1], ..., arr[n-1], arr[0], arr[1], ..., arr[k-1]"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["This solution has a time complexity of ",(0,a.jsxs)(n.span,{className:"katex",children:[(0,a.jsx)(n.span,{className:"katex-mathml",children:(0,a.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,a.jsxs)(n.semantics,{children:[(0,a.jsxs)(n.mrow,{children:[(0,a.jsx)(n.mi,{children:"O"}),(0,a.jsx)(n.mo,{stretchy:"false",children:"("}),(0,a.jsx)(n.mi,{children:"log"}),(0,a.jsx)(n.mo,{children:"\u2061"}),(0,a.jsx)(n.mi,{children:"n"}),(0,a.jsx)(n.mo,{stretchy:"false",children:")"})]}),(0,a.jsx)(n.annotation,{encoding:"application/x-tex",children:"O(\\log n)"})]})})}),(0,a.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,a.jsxs)(n.span,{className:"base",children:[(0,a.jsx)(n.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,a.jsx)(n.span,{className:"mopen",children:"("}),(0,a.jsxs)(n.span,{className:"mop",children:["lo",(0,a.jsx)(n.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,a.jsx)(n.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,a.jsx)(n.span,{className:"mord mathnormal",children:"n"}),(0,a.jsx)(n.span,{className:"mclose",children:")"})]})})]})," because we are using binary search."]}),"\n",(0,a.jsx)(i.A,{children:(0,a.jsx)(l.A,{value:"py",label:"Python",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"def find_target_rotated(arr, target):\n    left, right = 0, len(arr) - 1\n    while left <= right:\n        mid = left + (right - left) // 2\n        if arr[mid] == target:\n            return mid\n        \n        # (1) Left half is sorted\n        if arr[left] <= arr[mid]:\n\n            # (1.1) Target is in the left half\n            if arr[left] <= target < arr[mid]:\n                right = mid - 1\n\n             # (1.2) Target is in the right half\n            else:\n                left = mid + 1\n\n        # (2) Right half is sorted\n        else:\n\n            # (2.1) Target is in the right half \n            if arr[mid] < target <= arr[right]:\n                left = mid + 1\n\n            # (2.2) Target is in the left half\n            else:\n                right = mid - 1\n\n    return -1  # Target not found\n"})})})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Case 1: Left half is sorted"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"   |/     -- arr[mid]\n  /|      -- (1.1) Target is in the left half\n / |\n/  |      -- arr[left]\n   |  /\n   | /    -- (1.2) Target is in the right half\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Case 2: Right half is sorted"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"   |\n   |\n / |      -- (2.2) Target is in the left half\n/  |      \n   |  /   -- arr[right]\n   | /    -- (2.1) Target is in the right half\n   |/     -- arr[mid]\n  /|     \n"})})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}}}]);